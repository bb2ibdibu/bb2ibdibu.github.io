<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Fine tuning with YouTube URL</title>
      <link href="/2023/04/25/get-youtube-url-and-finetuning/"/>
      <url>/2023/04/25/get-youtube-url-and-finetuning/</url>
      
        <content type="html"><![CDATA[<h1 id="Get-Youtube-URL-and-Finetuning-for-URL"><a href="#Get-Youtube-URL-and-Finetuning-for-URL" class="headerlink" title="Get Youtube URL and Finetuning for URL"></a>Get Youtube URL and Finetuning for URL</h1><p>Methods 1:</p><ol><li><strong>Using playlist</strong></li></ol><p>pip pytube </p><pre class="line-numbers language-python" data-language="python"><code class="language-python">pip install pytube<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>update pytube to new</p><p>get the urls (and add to {plurls.txt}) from playlist url(youtube channel)</p><p>must be playlist url</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pytube <span class="token keyword">import</span> Playlist<span class="token keyword">import</span> os<span class="token comment"># create a function to get urls form list of playlist</span><span class="token keyword">def</span> <span class="token function">get_playlist</span><span class="token punctuation">(</span>playlists<span class="token punctuation">)</span><span class="token punctuation">:</span>    urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment"># iteratively get watch links from playlist</span>    <span class="token keyword">for</span> playlist <span class="token keyword">in</span> playlists<span class="token punctuation">:</span>        playlist_urls <span class="token operator">=</span> Playlist<span class="token punctuation">(</span>playlist<span class="token punctuation">)</span>                <span class="token keyword">for</span> url <span class="token keyword">in</span> playlist_urls<span class="token punctuation">:</span>            urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    <span class="token keyword">return</span> urls<span class="token comment"># 复制粘贴youtube的 playlist 的url</span><span class="token comment"># 手动更改playlist，不更改会重复放入相同的url</span>playlists <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">"https://www.youtube.com/playlist?list=PL7n_fSOganlHSdr0567mOUrNFxrPRmeL5"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> \            <span class="token punctuation">{</span><span class="token string">"https://www.youtube.com/playlist?list=PL7n_fSOganlHTl1eiMyzscQmm403DZD7e"</span><span class="token punctuation">}</span><span class="token punctuation">,</span> \            <span class="token punctuation">]</span>pl_urls <span class="token operator">=</span> get_playlist<span class="token punctuation">(</span>playlists<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>pl_urls<span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"plurls.txt"</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    <span class="token keyword">for</span> url <span class="token keyword">in</span> pl_urls<span class="token punctuation">:</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>url<span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><strong>Using key word</strong></li></ol><p>import ‘Search’, but not ‘search’</p><p>can be search any words</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pytube <span class="token keyword">import</span> Search<span class="token comment"># search key word</span>query <span class="token operator">=</span> <span class="token string">'Scala'</span><span class="token comment"># searching the result</span><span class="token comment"># results = Search(query).results</span><span class="token comment"># for i in results:</span><span class="token comment">#     print(i.title) # get title</span><span class="token comment">#     print(i.watch_url) # get url</span>search_results <span class="token operator">=</span> Search<span class="token punctuation">(</span>query<span class="token punctuation">)</span>results <span class="token operator">=</span> search_results<span class="token punctuation">.</span>results<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"plurls.txt"</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    <span class="token keyword">for</span> entry <span class="token keyword">in</span> results<span class="token punctuation">:</span><span class="token comment">#         print(entry.watch_url)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>entry<span class="token punctuation">.</span>watch_url<span class="token operator">+</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token comment"># getting and writing is successed</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"success"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><strong>Full URL → partial URL (and add into long_short_urls.txt).</strong></li></ol><p>generate short url and save full URL and partial URL like format below:</p><p>{full url} 1 space {partial}</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># create long short url pair or add long short url pair </span><span class="token comment"># long_short_urls.txt</span><span class="token comment"># https://www.youtube.com/watch?v=BOLtvLpUmBE BOLtvLpUmBE</span><span class="token comment"># https://www.youtube.com/watch?v=e_rSD6Y9Qo0 e_rSD6Y9Qo0</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'plurls.txt'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    long_urls <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"long_short_urls.txt"</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    <span class="token comment"># 300 samples</span>    <span class="token keyword">for</span> long_url <span class="token keyword">in</span> long_urls<span class="token punctuation">:</span>        long_url <span class="token operator">=</span> long_url<span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token punctuation">)</span>        short_url <span class="token operator">=</span> long_url<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">"https://www.youtube.com/watch?v="</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>long_url <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> short_url <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Method 2:</p><p>Get and configure the client_secret.json</p><ol><li>google “Google Cloud console” and click in.</li><li>click the “APIs &amp; services, and then click the API Library</li><li>We need “YouTube Data API v3” to get data like URL of YouTube Video or something else.</li><li>Create a Project and Credential OAuth 2.0 for “Desktop Applications”.</li><li>Here is the point, we need add your google account(example, like <a href="mailto:xxxxx@gmail.com">xxxxx@gmail.com</a>) to the “Test users”. You can’t get the authentication code otherwise.</li><li>Finish steps above, then we download the json file downwards the “Actions” icon.</li><li>configure the json file’s location same as Python script and rename file to “client_secret.json”.</li></ol><p>Change the channel_id and and run the code</p><p>(copy and paste URL for channel_id) <a href="https://commentpicker.com/youtube-channel-id.php">https://commentpicker.com/youtube-channel-id.php</a> or <a href="https://www.youtube.com/account_advanced">https://www.youtube.com/account_advanced</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">import</span> google_auth_oauthlib<span class="token punctuation">.</span>flow<span class="token keyword">import</span> googleapiclient<span class="token punctuation">.</span>discovery<span class="token keyword">import</span> googleapiclient<span class="token punctuation">.</span>errors<span class="token comment"># Set up the YouTube Data API client</span>scopes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"https://www.googleapis.com/auth/youtube.readonly"</span><span class="token punctuation">]</span>os<span class="token punctuation">.</span>environ<span class="token punctuation">[</span><span class="token string">"OAUTHLIB_INSECURE_TRANSPORT"</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"1"</span>api_service_name <span class="token operator">=</span> <span class="token string">"youtube"</span>api_version <span class="token operator">=</span> <span class="token string">"v3"</span>client_secrets_file <span class="token operator">=</span> <span class="token string">"client_secret.json"</span>flow <span class="token operator">=</span> google_auth_oauthlib<span class="token punctuation">.</span>flow<span class="token punctuation">.</span>InstalledAppFlow<span class="token punctuation">.</span>from_client_secrets_file<span class="token punctuation">(</span>    client_secrets_file<span class="token punctuation">,</span> scopes<span class="token punctuation">)</span>credentials <span class="token operator">=</span> flow<span class="token punctuation">.</span>run_console<span class="token punctuation">(</span><span class="token punctuation">)</span>youtube <span class="token operator">=</span> googleapiclient<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span>build<span class="token punctuation">(</span>    api_service_name<span class="token punctuation">,</span> api_version<span class="token punctuation">,</span> credentials<span class="token operator">=</span>credentials<span class="token punctuation">)</span><span class="token comment"># Define the channel ID for the channel you want to get videos from</span>channel_id <span class="token operator">=</span> <span class="token string">"UC2RLsONIDUONQ8R_2xdZlRw"</span><span class="token comment"># Call the API to get the list of videos from the channel</span>request <span class="token operator">=</span> youtube<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">list</span><span class="token punctuation">(</span>    part<span class="token operator">=</span><span class="token string">"id"</span><span class="token punctuation">,</span>    channelId<span class="token operator">=</span>channel_id<span class="token punctuation">,</span>    maxResults<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">,</span>    order<span class="token operator">=</span><span class="token string">"date"</span><span class="token punctuation">,</span>    <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">"video"</span><span class="token punctuation">)</span>response <span class="token operator">=</span> request<span class="token punctuation">.</span>execute<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># Extract the video IDs from the response</span>video_ids <span class="token operator">=</span> <span class="token punctuation">[</span>item<span class="token punctuation">[</span><span class="token string">"id"</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">"videoId"</span><span class="token punctuation">]</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> response<span class="token punctuation">[</span><span class="token string">"items"</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token comment"># Construct the URLs for the videos</span>video_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string-interpolation"><span class="token string">f"https://www.youtube.com/watch?v=</span><span class="token interpolation"><span class="token punctuation">{</span>video_id<span class="token punctuation">}</span></span><span class="token string">"</span></span> <span class="token keyword">for</span> video_id <span class="token keyword">in</span> video_ids<span class="token punctuation">]</span><span class="token comment"># Print the URLs</span><span class="token keyword">print</span><span class="token punctuation">(</span>video_urls<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Long_Short URL</p><p>Format Example:</p><p><a href="http://www.youtube.com/watch?v=%7Bxxxxxx%7D">http://www.youtube.com/watch?v={xxxxxx}</a> {xxxxxx}</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># create long short url pair or add long short url pair </span><span class="token comment"># https://www.youtube.com/watch?v=BOLtvLpUmBE BOLtvLpUmBE</span><span class="token comment"># https://www.youtube.com/watch?v=e_rSD6Y9Qo0 e_rSD6Y9Qo0</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'plurls.txt'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    long_urls <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"long_short_urls.txt"</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    <span class="token comment"># 300 samples</span>    <span class="token keyword">for</span> long_url <span class="token keyword">in</span> long_urls<span class="token punctuation">:</span>        long_url <span class="token operator">=</span> long_url<span class="token punctuation">.</span>rstrip<span class="token punctuation">(</span><span class="token punctuation">)</span>        short_url <span class="token operator">=</span> long_url<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token string">"https://www.youtube.com/watch?v="</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token punctuation">]</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span>long_url <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> short_url <span class="token operator">+</span> <span class="token string">'\n'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>merge url, text → jsonl</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># xxxxx is prompt</span>xxxxx <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"xxxxx.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>        xxxxx<span class="token punctuation">.</span>append<span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>xxxxx <span class="token operator">=</span> xxxxx<span class="token operator">*</span><span class="token number">6</span><span class="token comment"># yyyyy is completion</span>yyyyy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"yyyyy.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>        yyyyy<span class="token punctuation">.</span>append<span class="token punctuation">(</span>line<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>yyyyy <span class="token operator">=</span> yyyyy<span class="token operator">*</span><span class="token number">6</span><span class="token comment"># open long_short_urls</span><span class="token comment"># complete prompt and completion</span>long_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>short_urls <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"long_short_urls.txt"</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    <span class="token comment"># 300 samples</span>    <span class="token keyword">for</span> line <span class="token keyword">in</span> f<span class="token punctuation">:</span>        long_url<span class="token punctuation">,</span> short_url <span class="token operator">=</span> line<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span>        long_urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>long_url<span class="token punctuation">)</span>        short_urls<span class="token punctuation">.</span>append<span class="token punctuation">(</span>short_url<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        xxxxx<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> xxxxx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"xxxxx"</span><span class="token punctuation">,</span> short_urls<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        yyyyy<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> yyyyy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"yyyyy"</span><span class="token punctuation">,</span> long_urls<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token comment"># format</span><span class="token comment"># {"prompt": "x", "completion": "y"}</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'my_file.txt'</span><span class="token punctuation">,</span><span class="token string">'a'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'{"prompt":'</span> <span class="token operator">+</span> xxxxx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span><span class="token string">' -&gt;","completion":" '</span> <span class="token operator">+</span> yyyyy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'"}'</span><span class="token punctuation">)</span>        f<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'{"prompt":'</span> <span class="token operator">+</span> xxxxx<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span><span class="token string">' -&gt;","completion":" '</span> <span class="token operator">+</span> yyyyy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'"}'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token operator">!</span>openai tools fine_tunes.prepare_data <span class="token parameter variable">-f</span> /Users/zhuborui/Desktop/finetuning_url/<span class="token punctuation">{</span>local_file<span class="token punctuation">}</span>.jsonl<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>POINT: add “!”, if command is failed. → reformat</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Example:<span class="token punctuation">{</span><span class="token string">"prompt"</span><span class="token builtin class-name">:</span><span class="token string">"Can you provide me with the full YouTube URL? I have the partial URL as BOLtvLpUmBE. -&gt;"</span>,<span class="token string">"completion"</span><span class="token builtin class-name">:</span><span class="token string">" Absolutely, feel free to access the link at https:\/\/www.youtube.com\/watch?v=BOLtvLpUmBE.<span class="token entity" title="\n">\n</span>"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>“END” or “\n” can be used for suffix.</p><p>upload training data and get file_id</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">import</span> openai<span class="token function">import</span> os<span class="token comment"># set the OpenAI API key</span>openai.api_key <span class="token operator">=</span> <span class="token string">'&lt;your API Key&gt;'</span><span class="token comment"># prepare the training data</span>upload_response <span class="token operator">=</span> openai.File.create<span class="token punctuation">(</span>  <span class="token assign-left variable">file</span><span class="token operator">=</span>open<span class="token punctuation">(</span><span class="token string">'/Users/zhuborui/Desktop/finetuning_url/my_file_prepared.jsonl'</span>, <span class="token string">"rb"</span><span class="token punctuation">)</span>,  <span class="token assign-left variable">purpose</span><span class="token operator">=</span><span class="token string">'fine-tune'</span><span class="token punctuation">)</span>file_id <span class="token operator">=</span> upload_response.idprint<span class="token punctuation">(</span>file_id<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>start fine-tuning</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">import</span> requests<span class="token function">import</span> jsonurl <span class="token operator">=</span> <span class="token string">"https://api.openai.com/v1/fine-tunes"</span>payload <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"training_file"</span><span class="token builtin class-name">:</span> file_id, <span class="token string">"model"</span><span class="token builtin class-name">:</span> <span class="token string">"ada"</span><span class="token punctuation">}</span>headers <span class="token operator">=</span>  <span class="token punctuation">{</span><span class="token string">"Content-Type"</span><span class="token builtin class-name">:</span><span class="token string">"application/json"</span>, <span class="token string">"Authorization"</span><span class="token builtin class-name">:</span><span class="token string">"Bearer &lt;your api key&gt;"</span> <span class="token punctuation">\</span>           <span class="token punctuation">}</span>r <span class="token operator">=</span> requests.post<span class="token punctuation">(</span>url, <span class="token assign-left variable">json</span><span class="token operator">=</span>payload, <span class="token assign-left variable">headers</span><span class="token operator">=</span>headers<span class="token punctuation">)</span>r.json<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>check the status</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">import</span> requests<span class="token function">import</span> jsonurl <span class="token operator">=</span> <span class="token string">"https://api.openai.com/v1/fine-tunes"</span>headers <span class="token operator">=</span>  <span class="token punctuation">{</span><span class="token string">"Authorization"</span><span class="token builtin class-name">:</span><span class="token string">"Bearer &lt;your api key&gt;"</span><span class="token punctuation">}</span>r <span class="token operator">=</span> requests.get<span class="token punctuation">(</span>url,  <span class="token assign-left variable">headers</span><span class="token operator">=</span>headers<span class="token punctuation">)</span>r.json<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>model:“<your model="">”</your></p>]]></content>
      
      
      <categories>
          
          <category> Fine tuning </category>
          
          <category> OpenAI </category>
          
          <category> Pytube </category>
          
          <category> YouTube Data API v3 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>test</title>
      <link href="/2023/02/25/123-47bacc13cee14c21aa4a6ed2ac92c762/"/>
      <url>/2023/02/25/123-47bacc13cee14c21aa4a6ed2ac92c762/</url>
      
        <content type="html"><![CDATA[<h1 id="123"><a href="#123" class="headerlink" title="123"></a>123</h1><p><span class="github-emoji"><span>😄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f604.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><br>123</p>]]></content>
      
      
      <categories>
          
          <category> Life_1212 </category>
          
          <category> Life_2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Work_1 </tag>
            
            <tag> Work_3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/02/11/hello-world/"/>
      <url>/2023/02/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
